fuzzyfinder.vim :
-----------------
description
    Fuzzy/Partial pattern explorer for buffer/file/MRU/command/favorite/tag/etc.

http://www.vim.org/scripts/script.php?script_id=1984

script karma
    Rating 534/138
    Downloaded by 2312

created by
    Takeshi NISHIDA
 
script type
utility
 
description
    Sceenshot:
        File mode: http://photozou.jp/photo/photo_only/175590/12609575

    Description in Japanese:
        http://vim.g.hatena.ne.jp/keyword/fuzzyfinder.vim

Description: ---------------------------------------------------------- {{{1
  Fuzzyfinder provides convenient ways to quickly reach the buffer/file you
  want. Fuzzyfinder finds matching files/buffers with a fuzzy/partial
  pattern to which it converted the entered pattern.
                                                                            
  E.g.: entered pattern -> fuzzy pattern / partial pattern
        abc             -> *a*b*c*       / *abc*
        a?c             -> *a?c*         / *a?c*
        dir/file        -> dir/*f*i*l*e* / dir/*file*
        d*r/file        -> d*r/*f*i*l*e* / d*r/*file*
        ../**/s         -> ../**/*s*     / ../**/*s*
                                                                            
    (** allows searching a directory tree.)
                                                                            
  You will be happy when:
    "./OhLongLongLongLongLongFile.txt"
    "./AhLongLongLongLongLongName.txt"
    "./AhLongLongLongLongLongFile.txt" <- you want :O
    Type "AF" and "AhLongLongLongLongLongFile.txt" will be select. :D
                                                                            
  Fuzzyfinder has some modes:
    - Buffer mode
    - File mode
    - MRU-file mode (most recently used files)
    - MRU-command mode (most recently used command-lines)
    - Favorite-file mode
    - Directory mode (yet another :cd command)
    - Tag mode (yet another :tag command)
    - Tagged-file mode (files which are included in current tags)
                                                                            
  Fuzzyfinder supports the multibyte.
                                                                            
Installation: --------------------------------------------------------- {{{1
  Drop this file in your plugin directory.
                                                                            
Usage: ---------------------------------------------------------------- {{{1
  Starting Fuzzyfinder:
    You can start Fuzzyfinder by the following commands:
                                                                            
      :FuzzyFinderBuffer      - launchs buffer-mode Fuzzyfinder.
      :FuzzyFinderFile        - launchs file-mode Fuzzyfinder.
      :FuzzyFinderMruFile     - launchs MRU-file-mode Fuzzyfinder.
      :FuzzyFinderMruCmd      - launchs MRU-command-mode Fuzzyfinder.
      :FuzzyFinderFavFile     - launchs favorite-file-mode Fuzzyfinder.
      :FuzzyFinderDir         - launchs directory-mode Fuzzyfinder.
      :FuzzyFinderTag         - launchs tag-mode Fuzzyfinder.
      :FuzzyFinderTaggedFile  - launchs tagged-file-mode Fuzzyfinder.
                                                                            
    It is recommended to map these commands. These commands can take initial
    text as a command argument. The text will be entered after Fuzzyfinder
    launched. If a command was executed with a ! modifier (e.g.
    :FuzzyFinderTag!), it enables the partial matching instead of the fuzzy
    matching.
                                                                            
                                                                            
  In Fuzzyfinder:
    The entered pattern is converted to the fuzzy pattern and buffers/files
    which match the pattern is shown in a completion menu.
                                                                            
    A completion menu is shown when you type at the end of the line and the
    length of entered pattern is more than setting value. By default, it is
    shown at the beginning.
                                                                            
    If too many items (200, by default) were matched, the completion is
    aborted to reduce nonresponse.

    If an item were matched with entered pattern exactly, it is shown first.
    The item whose file name has longer prefix matching is placed upper.
    Also, an item which matched more sequentially is placed upper. The item
    whose index were matched with a number suffixed with entered pattern is
    placed lower. the first item in the completion menu will be selected
    automatically.

    You can open a selected item in various ways:
      <CR>  - opens in a previous window.
      <C-j> - opens in a split window.
      <C-k> - opens in a vertical-split window.
      <C-]> - opens in a new tab page.
    In MRU-command mode, <CR> executes a selected command and others just
    put it into a command-line. These key mappings are customizable.
                                                                            
    To cancel and return to previous window, leave Insert mode.
                                                                            
    To Switch the mode without leaving Insert mode, use <C-l> or <C-o>.
    This key mapping is customizable.
                                                                            
    If you want to temporarily change whether or not to ignore case, use
    <C-t>. This key mapping is customizable.

  To Hide The Completion Temporarily Menu In Fuzzyfinder:
    You can close it by <C-e> and reopen it by <C-x><C-u>.

  About Highlighting:
    Fuzzyfinder highlights the buffer with "Error" group when the completion
    item was not found or the completion process was aborted.
                                                                            
  About Alternative Approach For Tag Jump:
    Following mappings are replacements for :tag and <C-]>:
                                                                            
      nnoremap <silent> <C-f><C-t> :FuzzyFinderTag!<CR>
      nnoremap <silent> <C-]>      :FuzzyFinderTag! <C-r>=expand('<cword>')<C
                                                                            
    In the tag mode, it is recommended to use partial matching instead of
    fuzzy matching.
                                                                            
  About Tagged File Mode:
    The files which are included in the current tags are the ones which are
    related to the current working environment. So this mode is a pseudo
    project mode.
                                                                            
  About Usage Of Command Argument:
    As an example, if you want to launch file-mode Fuzzyfinder with the full
    path of current directory, map like below:
                                                                                                
      nnoremap <C-p> :FuzzyFinderFile <C-r>=fnamemodify(getcwd(), ':p')<CR><CR>
                                                                                                
    Instead, if you want the directory of current buffer and not current
    directory:
                                                                                                
      nnoremap <C-p> :FuzzyFinderFile <C-r>=expand('%:~:.')[:-1-len(expand('%:~:.:t'))]<CR><CR>

                                                                            
  About Abbreviations And Multiple Search:
    You can use abbreviations and multiple search in each mode. For example,
    set as below:
                                                                            
      let g:FuzzyFinderOptions.Base.abbrev_map  = {
            \   "^WORK" : [
            \     "~/project/**/src/",
            \     ".vim/plugin/",
            \   ],
            \ }
                                                                            
    And type "WORKtxt" in file-mode Fuzzyfinder, then it searches by
    following patterns:
                                                                            
      "~/project/**/src/*t*x*t*"
      ".vim/plugin/*t*x*t*"
                                                                            
  Adding Favorite Files:
    You can add a favorite file by the following commands:
                                                                            
      :FuzzyFinderAddFavFile {filename}
                                                                            
    If you do not specify the filename, current file name is used.
                                                                            
  About Information File:
    Fuzzyfinder writes information of the MRU, favorite, etc to the file by
    default (~/.vimfuzzyfinder).
                                                                            
    :FuzzyFinderEditInfo command is helpful in editing your information
    file. This command read the information file in new unnamed buffer.
    Close the buffer and the information file will be updated.
                                                                            
  About Cache:
    Once a cache was created, It is not updated automatically to improve
    response by default. To update it, use :FuzzyFinderRemoveCache command.
                                                                            
  About Migemo:
    Migemo is a search method for Japanese language. 
